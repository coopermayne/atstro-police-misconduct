---
import type { SanityDocument } from "@sanity/client";
import { sanityClient } from "sanity:client";
import imageUrlBuilder from "@sanity/image-url";
import type { SanityImageSource } from "@sanity/image-url/lib/types/types";
import { PortableText } from "astro-portabletext";
import MainLayout from '../../layouts/MainLayout.astro';

const POST_QUERY = `*[_type == "post" && slug.current == $slug][0]`;
const post = await sanityClient.fetch<SanityDocument>(POST_QUERY, Astro.params);

export async function getStaticPaths(): Promise<{ params: { slug: string } }> {
  const SLUGS_QUERY = `*[_type == "post" && defined(slug.current)]{
    "params": {"slug": slug.current}
  }`;
  return await sanityClient.fetch(SLUGS_QUERY, Astro.params);
}

const { projectId, dataset } = sanityClient.config();
const urlFor = (source: SanityImageSource) =>
  projectId && dataset
    ? imageUrlBuilder({ projectId, dataset }).image(source)
    : null;
const postImageUrl = post.image
  ? urlFor(post.image)?.width(550).height(310).url()
  : null;
---
<MainLayout content={{ title: post.title }}>

  <section class="container mx-auto min-h-screen max-w-3xl p-8 flex flex-col gap-6 bg-white dark:bg-gray-900 text-gray-900 dark:text-white shadow-lg rounded-lg">
    <a href="/posts" class="text-blue-500 hover:underline font-medium">&larr; Back to posts</a>
    {
      postImageUrl && (
        <img
          src={postImageUrl}
          alt={post.title}
          class="rounded-xl shadow-md w-full h-auto object-cover"
        />
      )
    }
    <h1 class="text-5xl font-extrabold mb-4">{post.title}</h1>
    <div class="text-sm mb-6">
      <p>Published: {new Date(post.publishedAt).toLocaleDateString()}</p>
    </div>
    <div class="prose dark:prose-invert max-w-none">
      {Array.isArray(post.body) && <PortableText value={post.body} />}
    </div>
  </section>
</MainLayout>